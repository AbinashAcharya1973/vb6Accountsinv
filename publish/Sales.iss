; 
; Install Script for EnLite
;  [Inno Setup Toolbar Advanced - Script Wizard]
; 
; Generated by the 'Inno Setup Toolbar Advanced for Visual Basic 6.0'
; Written and Programmed by Brian Haase and Martin Rizal
; 
; Generated for Inno Setup Compiler, Version 4+
; 
  
[Setup]
AppName=EnLite
AppVerName=EnLite 1.0.0
AppPublisher=TechSpark
AppPublisherURL=enlite.co.in
AppSupportURL=enlite.co.in
AppUpdatesURL=enlite.co.in
DefaultDirName={pf}\EnLite
DefaultGroupName=EnLite
Compression=lzma
SolidCompression=yes
PrivilegesRequired=admin
  
[Tasks]
;Installation Task
Name: vb6; Description: Visual Basic 6.0 Core Runtime Library; GroupDescription: Install Component(s):; Check: NeedVB('6.0.98.48');
Name: runas; Description: Run program as Administrator; GroupDescription: Program Setting:
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
  
[Files]
;Program files for deployment


;Executable File or Main Component
Source: "EnliteSAS.exe"; DestDir: {app}; Flags: ignoreversion 32bit


;Visual Basic 6.0 Runtime Files
Source: MSVCRT40.DLL; DestDir: {sys}; Flags: onlyifdoesntexist uninsneveruninstall sharedfile 32bit allowunsafefiles; Tasks: vb6
Source: OLEPRO32.DLL; DestDir: {sys}; Flags: restartreplace uninsneveruninstall sharedfile regserver noregerror 32bit allowunsafefiles; Tasks: vb6
Source: COMCAT.DLL; DestDir: {sys}; Flags: restartreplace uninsneveruninstall sharedfile regserver noregerror 32bit allowunsafefiles; Tasks: vb6
Source: ASYCFILT.DLL; DestDir: {sys}; Flags: restartreplace uninsneveruninstall sharedfile 32bit allowunsafefiles; Tasks: vb6
Source: OLEAUT32.DLL; DestDir: {sys}; Flags: restartreplace uninsneveruninstall sharedfile regserver noregerror 32bit allowunsafefiles; Tasks: vb6
Source: STDOLE2.TLB; DestDir: {sys}; Flags: restartreplace uninsneveruninstall sharedfile 32bit allowunsafefiles; Tasks: vb6
Source: msvbvm60.dll; DestDir: {sys}; Flags: restartreplace uninsneveruninstall sharedfile regserver noregerror 32bit allowunsafefiles; Tasks: vb6




;Dependencies and Files
Source: "DAO350.DLL"; DestDir: {dao}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{dao}\DAO350.DLL'));
Source: "MSJet35.dll"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\MSJet35.dll'));
Source: "MSJtEr35.dll"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\MSJtEr35.dll'));
Source: "MSJInt35.dll"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\MSJInt35.dll'));
Source: "VBAJet32.dll"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\VBAJet32.dll'));
Source: "ExpSrv.dll"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\ExpSrv.dll'));
Source: "MSRD2x35.dll"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\MSRD2x35.dll'));
Source: "MsRepl35.dll"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\MsRepl35.dll'));
Source: "VB5DB.dll"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\VB5DB.dll'));
Source: "msstdfmt.dll"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\msstdfmt.dll'));
Source: "winhttpcom.dll"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\winhttpcom.dll'));
Source: "cdosys.dll"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\cdosys.dll'));
Source: "DBGRID32.OCX"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\DBGRID32.OCX'));
Source: "msmask32.ocx"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\msmask32.ocx'));
Source: "richtx32.ocx"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\richtx32.ocx'));
Source: "RichEd32.dll"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\RichEd32.dll'));
Source: "CRYSTL32.OCX"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\CRYSTL32.OCX'));
Source: "CRPE32.DLL"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\CRPE32.DLL'));
Source: "IMPLODE.DLL"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\IMPLODE.DLL'));
Source: "PG32.DLL"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\PG32.DLL'));
Source: "CO2C40EN.DLL"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\CO2C40EN.DLL'));
Source: "P2BBND.DLL"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\P2BBND.DLL'));
Source: "P2BDAO.DLL"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\P2BDAO.DLL'));
Source: "P2CTDAO.DLL"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\P2CTDAO.DLL'));
Source: "P2IRDAO.DLL"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\P2IRDAO.DLL'));
Source: "P2SODBC.DLL"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\P2SODBC.DLL'));
Source: "MSVCRT20.DLL"; DestDir: {sys}; Flags: 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\MSVCRT20.DLL'));
Source: "comdlg32.ocx"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\comdlg32.ocx'));
Source: "comct232.ocx"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\comct232.ocx'));
Source: "mscomctl.ocx"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\mscomctl.ocx'));
Source: "mscomct2.ocx"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\mscomct2.ocx'));
Source: "comct332.ocx"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\comct332.ocx'));
Source: "comctl32.ocx"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\comctl32.ocx'));
Source: "msdatgrd.ocx"; DestDir: {sys}; Flags: regserver noregerror 32bit allowunsafefiles; Check: FileNotFound(ExpandConstant('{sys}\msdatgrd.ocx'));


; NOTE: Don't use "Flags: ignoreversion" on any shared system files
  
[Icons]
;Shortcut Icons
Name: "{userdesktop}\EnLite"; Filename: "{app}\EnliteSAS.exe"; Tasks: desktopicon
  


[Registry]
;For accessing Windows registry
;Run as Admin
Root: HKCU; Subkey: "Software\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers"; ValueType: string; ValueName: "{app}\EnliteSAS.exe"; ValueData: RUNASADMIN; flags: uninsdeletevalue; MinVersion: 0,6.0; Tasks: runas




[Run]
;Run misc. process
;Addtional Task




[Code]
//For scripting purposes


//Check if File is not found
function FileNotFound(fname: String): Boolean;
begin
 if FileExists(fname) then
 begin
 Result:=False;
 end else
 begin
 Result:=True;
 end;
end;




//This part will check for VB6 Runtime. Algorithm courtesy of ArvyDas


procedure Explode(var Dest: TArrayOfInteger; Text: String; Separator: String);
Var
  i, p: Integer;
begin
i := 0;
repeat
   SetArrayLength(Dest, i+1);
    p := Pos(Separator,Text);
    if p > 0 then begin
      Dest[i] := StrToInt(Copy(Text, 1, p-1));
      Text := Copy(Text, p + Length(Separator), Length(Text));
      i := i + 1;
    end else begin
      Dest[i] := StrToInt(Text);
      Text := '';
    end;
  until Length(Text)=0;
end;


// Function compares version strings numerically:
//     * when v1 = v2, result = 0
//     * when v1 < v2, result = -1
//     * when v1 > v2, result = 1
//
// Supports version numbers with trailing zeroes, for example 1.02.05.
// Supports comparison of two version number of different lengths, for example
//     CompareVersions('1.2', '2.0.3')
// When any of the parameters is '' (empty string) it considers version number as 0


function NeedUpgrade(v1: String; v2: String): Boolean;
Var
  v1parts: TArrayOfInteger;
  v2parts: TArrayOfInteger;
  i: Integer;
begin
  if v1 = '' then
  begin
    v1 := '0';
  end;


  if v2 = '' then
  begin
    v2 := '0';
  end;


  Explode(v1parts, v1, '.');
  Explode(v2parts, v2, '.');


  if (GetArrayLength(v1parts) > GetArrayLength(v2parts)) then
  begin
    SetArrayLength(v2parts, GetArrayLength(v1parts))
  end else if (GetArrayLength(v2parts) > GetArrayLength(v1parts)) then
  begin
   SetArrayLength(v1parts, GetArrayLength(v2parts))
  end;


  for i := 0 to GetArrayLength(v1parts) - 1 do
  begin
    if v1parts[i] > v2parts[i] then
    begin
      // v1 is greater
      Result := True;
      exit;
    end else if v1parts[i] < v2parts[i] then
    begin
      // v2 is greater 
      Result := False;
      exit;
    end;
  end;


  // Are Equal
  Result := False;
end;


//Check VB6 Runtime if not exists or outdated
function NeedVB(ver: String): Boolean;
Var
path: String;
ver2: String;
begin
  path:=ExpandConstant('{sys}\msvbvm60.dll');
  GetVersionNumbersString(path,ver2);
  If FileExists(path) Then
  begin
    If NeedUpgrade(ver, ver2) Then
    begin
      Result:=True;
    end else
    begin
      Result:=False;
    end;
  end else
  begin
    Result:=True;
  end;
end;


